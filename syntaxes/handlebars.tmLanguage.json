{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Glimmer",
  "scopeName": "source.handlebars",
  "fileTypes": [
    "hbs"
  ],
  "patterns": [
    {
      "include": "#glimmer-else-block"
    },
    {
      "include": "#glimmer-bools"
    },
    {
      "include": "#glimmer-special-block"
    },
    {
      "include": "#glimmer-unescaped-expression"
    },
    {
      "include": "#glimmer-comment-block"
    },
    {
      "include": "#glimmer-comment-inline"
    },
    {
      "include": "#glimmer-expression-property"
    },
    {
      "include": "#glimmer-control-expression"
    },
    {
      "include": "#glimmer-expression"
    },
    {
      "include": "#glimmer-block"
    },
    {
      "include": "#html-tag"
    },
    {
      "include": "#component-tag"
    },
    {
      "include": "#html-comment"
    },
    {
      "include": "#entities"
    }
  ],
  "repository": {
    "glimmer-component-path": {
      "match": "(::|\\.)",
      "captures": {
        "1": {
          "name":"punctuation.definition.tag"
        }
      }
    },
    "string-double-quoted-handlebars": {
      "name": "string.quoted.double.handlebars",
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.handlebars"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.handlebars"
        }
      },
      "patterns": [
        {
          "name": "constant.character.escape.handlebars",
          "match": "\\\\\""
        }
      ]
    },
    "string-single-quoted-handlebars": {
      "name": "string.quoted.single.handlebars",
      "begin": "'",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.handlebars"
        }
      },
      "end": "'",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.handlebars"
        }
      },
      "patterns": [
        {
          "name": "constant.character.escape.handlebars",
          "match": "\\\\'"
        }
      ]
    },
    "string-double-quoted-html": {
      "name": "string.quoted.double.html.handlebars",
      "begin": "\"",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.handlebars"
        }
      },
      "end": "\"",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.handlebars"
        }
      },
      "patterns": [
        {
          "name": "constant.character.escape.handlebars",
          "match": "\\\\\""
        },
        {
          "include": "#glimmer-bools"
        },
        {
          "include": "#glimmer-expression-property"
        },
        {
          "include": "#glimmer-control-expression"
        },
        {
          "include": "#glimmer-expression"
        },
        {
          "include": "#glimmer-block"
        }
      ]
    },
    "string-single-quoted-html": {
      "name": "string.quoted.single.html.handlebars",
      "begin": "'",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.handlebars"
        }
      },
      "end": "'",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.handlebars"
        }
      },
      "patterns": [
        {
          "name": "constant.character.escape.handlebars",
          "match": "\\\\'"
        },
        {
          "include": "#glimmer-bools"
        },
        {
          "include": "#glimmer-expression-property"
        },
        {
          "include": "#glimmer-control-expression"
        },
        {
          "include": "#glimmer-expression"
        },
        {
          "include": "#glimmer-block"
        }
      ]
    },
    "boolean": {
      "match": "true|false|undefined|null|\\d+",
      "captures": {
        "0": {
          "name": "constant.language.handlebars"
        }
      },
      "patterns": []
    },
    "param": {
      "match": "(@|this.)([a-zA-Z0-9_.-]+)",
      "captures": {
        "0": {
          "name": "support.function",
          "patterns": [
            {
              "name": "markup.bold",
              "match": "(@|this)"
            },
            {
              "name": "punctuation.definition.tag",
              "match": "(\\.)+"
            }
          ]
        },
        "1": {
          "name": "support.function",
          "patterns": [
            {
              "name": "punctuation.definition.tag",
              "match": "(\\.)+"
            }
          ]
        }
      },
      "patterns": []
    },
    "attention": {
      "name": "storage.type.class.${1:/downcase}",
      "match": "@?(TODO|FIXME|CHANGED|XXX|IDEA|HACK|NOTE|REVIEW|NB|BUG|QUESTION|TEMP)\\b",
      "patterns": []
    },
    "glimmer-unescaped-expression": {
      "name": "entity.unescaped.expression.handlebars",
      "begin": "{{{",
      "end": "}}}",
      "captures": {
        "0": {
          "name": "keyword.operator"
        }
      },
      "patterns": [
        {
          "include": "#string-single-quoted-handlebars"
        },
        {
          "include": "#string-double-quoted-handlebars"
        },
        {
          "include": "#glimmer-subexp"
        },
        {
          "include": "#param"
        }
      ]
    },
    "glimmer-comment-block": {
      "name": "comment.block.glimmer",
      "begin": "{{!--",
      "end": "--}}",
      "captures": {
        "0": {
          "name": "punctuation.definition.block.comment.glimmer"
        }
      },
      "patterns": [
        {
          "include": "#attention"
        }
      ]
    },
    "glimmer-comment-inline": {
      "name": "comment.inline.glimmer",
      "begin": "{{!",
      "end": "}}",
      "captures": {
        "0": {
          "name": "punctuation.definition.block.comment.glimmer"
        }
      },
      "patterns": [
        {
          "include": "#attention"
        }
      ]
    },
    "glimmer-bools": {
      "name": "entity.expression.handlebars",
      "match": "({{~?)(true|false|null|undefined|\\d+)(~?}})",
      "captures": {
        "0": {
          "name": "keyword.operator"
        },
        "1": {
          "name": "keyword.operator"
        },
        "2": {
          "name": "constant.language.handlebars"
        },
        "3": {
          "name": "keyword.operator"
        }
      }
    },
    "glimmer-else-block": {
      "name": "entity.expression.handlebars",
      "match": "({{~?)(else)(~?}})",
      "captures": {
        "0": {
          "name": "punctuation.definition.tag"
        },
        "1": {
          "name": "punctuation.definition.tag"
        },
        "2": {
          "name": "keyword.control"
        },
        "3": {
          "name": "punctuation.definition.tag"
        }
      }
    },
    "glimmer-special-block": {
      "name": "entity.expression.handlebars",
      "match": "({{~?)(yield|outlet)(~?}})",
      "captures": {
        "0": {
          "name": "keyword.operator"
        },
        "1": {
          "name": "keyword.operator"
        },
        "2": {
          "name": "keyword.control"
        },
        "3": {
          "name": "keyword.operator"
        }
      }
    },
    "glimmer-as-stuff": {
      "patterns": [
        {
          "include": "#as-keyword"
        },
        {
          "include": "#as-params"
        }
      ]
    },
    "glimmer-block": {
      "name": "entity.expression.handlebars",
      "begin": "({{~?)(#|\/)(([@a-zA-Z0-9_/.-]+))",
      "end": "(~?}})",
      "captures": {
        "1": {
          "name": "punctuation.definition.tag"
        },
        "2": {
          "name": "punctuation.definition.tag"
        },
        "3": {
          "name": "keyword.control",
          "patterns": [
            {
              "name": "punctuation.definition.tag",
              "match": "(\\.)+"
            }
          ]
        }
      },
      "patterns": [
        {
          "include": "#glimmer-as-stuff"
        },
        {
          "include": "#glimmer-supexp-content"
        }
      ]
    },
    "glimmer-expression-property": {
      "name": "entity.expression.handlebars",
      "begin": "({{~?)((@|this.)([a-zA-Z0-9_.-]+))",
      "end": "(~?}})",
      "captures": {
        "1": {
          "name": "keyword.operator"
        },
        "2": {
          "name": "keyword.operator"
        },
        "3": {
          "name": "support.function",
          "patterns": [
            {
              "name": "markup.bold",
              "match": "(@|this)"
            },
            {
              "name": "punctuation.definition.tag",
              "match": "(\\.)+"
            }
          ]
        },
        "4": {
          "name": "support.function",
          "patterns": [
            {
              "name": "punctuation.definition.tag",
              "match": "(\\.)+"
            }
          ]
        }
      },
      "patterns": [
        {
          "include": "#glimmer-supexp-content"
        }
      ]
    },
    "glimmer-expression": {
      "name": "entity.expression.handlebars",
      "begin": "({{~?)(([@a-zA-Z0-9_.-]+))",
      "end": "(~?}})",
      "captures": {
        "1": {
          "name": "keyword.operator"
        },
        "2": {
          "name": "keyword.operator"
        },
        "3": {
          "name": "support.function",
          
          "patterns": [
            {
              "name": "punctuation.definition.tag",
              "match": "(\\.)+"
            }
          ]
        }
      },
      "patterns": [
        {
          "include": "#glimmer-supexp-content"
        }
      ]
    },
    "glimmer-supexp-content": {
      "patterns": [
        {
          "include": "#glimmer-subexp"
        },
        {
          "include": "#string-single-quoted-handlebars"
        },
        {
          "include": "#string-double-quoted-handlebars"
        },
        {
          "include": "#boolean"
        },
        {
          "include": "#param"
        },
        {
          "include": "#glimmer-parameter-name"
        },
        {
          "include": "#glimmer-parameter-value"
        }
      ]
    },
    "glimmer-control-expression": {
      "name": "entity.expression.handlebars",
      "begin": "({{~?)(([-a-z/]+)\\s)",
      "end": "(~?}})",
      "captures": {
        "1": {
          "name": "keyword.operator"
        },
        "2": {
          "name": "keyword.operator"
        },
        "3": {
          "name": "keyword.control"
        }
      },
      "patterns": [
        {
          "include": "#glimmer-supexp-content"
        }
      ]
    },
    "glimmer-subexp": {
      "name": "entity.subexpression.handlebars",
      "begin": "(\\()([@a-zA-Z0-9.-]+)",
      "end": "(\\))",
      "captures": {
        "1": {
          "name": "keyword.other"
        },
        "2": {
          "name": "keyword.control"
        }
      },
      "patterns": [
        {
          "include": "#glimmer-supexp-content"
        }
      ]
    },
    "as-keyword": {
      "name": "keyword.control",
      "match": "\\s\\b(as)\\b(?=\\s\\|)",
      "patterns": []
    },
    "as-params": {
      "name": "keyword.block-params.handlebars",
      "begin": "(?<!\\|)(\\|)",
      "beginCaptures": {
        "1": {
          "name": "constant.other.symbol.begin.handlebars"
        }
      },
      "end": "(\\|)(?!\\|)",
      "endCaptures": {
        "1": {
          "name": "constant.other.symbol.end.handlebars"
        }
      },
      "patterns": [
        {
          "include": "#variable"
        }
      ]
    },
    "glimmer-parameter-value": {
      "match": "\\b([a-zA-Z0-9:_.-]+)\\b(?!=)",
      "captures": {
        "1": {
          "name": "support.function",
          "patterns": [
            {
              "name": "punctuation.definition.tag",
              "match": "(\\.)+"
            }
          ]
        }
      },
      "patterns": []
    },
    "glimmer-parameter-name": {
      "match": "\\b([a-zA-Z0-9_-]+)(\\s?=)",
      "captures": {
        "1": {
          "name": "variable.parameter.name.handlebars"
        },
        "2": {
          "name": "punctuation.definition.expression.handlebars"
        }
      },
      "patterns": []
    },
    "variable": {
      "name": "support.function",
      "match": "\\b([a-zA-Z0-9-_]+)\\b",
      "patterns": []
    },
    "html-comment": {
      "name": "comment.block.html.handlebars",
      "begin": "<!--",
      "end": "--\\s*>",
      "captures": {
        "0": {
          "name": "punctuation.definition.comment.html.handlebars"
        }
      },
      "patterns": [
        {
          "include": "#attention"
        },
        {
          "match": "--",
          "name": "invalid.illegal.bad-comments-or-CDATA.html.handlebars"
        }
      ]
    },
    "tag-like-content": {
      "patterns": [
        {
          "include": "#glimmer-bools"
        },
        {
          "include": "#glimmer-unescaped-expression"
        },
        {
          "include": "#glimmer-comment-block"
        },
        {
          "include": "#glimmer-comment-inline"
        },
        {
          "include": "#glimmer-expression-property"
        },
        {
          "include": "#boolean"
        },
        {
          "include": "#glimmer-control-expression"
        },
        {
          "include": "#glimmer-expression"
        },
        {
          "include": "#glimmer-block"
        },
        {
          "include": "#string-double-quoted-html"
        },
        {
          "include": "#string-single-quoted-html"
        },
        {
          "include": "#glimmer-as-stuff"
        },
        {
          "include": "#html-attribute"
        }
      ]
    },
    "component-tag": {
      "name": "meta.tag.any.handlebars",
      "begin": "(<\\/?)([@a-zA-Z0-9-:\\.]+)\\b",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag"
        },
        "2": {
          "name": "entity.name.type",
          "patterns": [{
            "include": "#glimmer-component-path"
          }, {
            "name": "markup.bold",
            "match": "(@|:)"
          }]
        }
      },
      "end": "(\\/?)(>)",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag"
        },
        "2": {
          "name": "punctuation.definition.tag"
        }
      },
      "patterns": [
        {
          "include": "#tag-like-content"
        }
      ]
    },
    "html-tag": {
      "name": "meta.tag.any.handlebars",
      "begin": "(<\\/?)([a-z0-9-]+)(?!\\.|:)\\b",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag"
        },
        "2": {
          "name": "entity.name.tag.html.handlebars"
        }
      },
      "end": "(\\/?)(>)",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag"
        },
        "2": {
          "name": "punctuation.definition.tag"
        }
      },
      "patterns": [
        {
          "include": "#tag-like-content"
        }
      ]
    },
    "html-attribute": {
      "match": "\\s([@a-zA-Z0-9:_.-]+)(=)?",
      "captures": {
        "1": {
          "name": "entity.other.attribute-name.handlebars",
          "patterns": [
            {
              "name": "markup.italic",
              "match": "(@)"
            },
            {
              "name": "markup.bold",
              "match": "(\\.\\.\\.attributes)"
            }
          ]
        },
        "2": {
          "name": "punctuation.separator.key-value.html.handlebars"
        }
      }
    },
    "entities": {
      "patterns": [
        {
          "name": "constant.character.entity.html.handlebars",
          "match": "(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)",
          "captures": {
            "1": {
              "name": "punctuation.definition.entity.html.handlebars"
            },
            "3": {
              "name": "punctuation.definition.entity.html.handlebars"
            }
          }
        },
        {
          "name": "invalid.illegal.bad-ampersand.html.handlebars",
          "match": "&"
        }
      ]
    }
  }
}